Understand the application and why a sort is good or bad and when to use it

In my experience, from most to least commonly mentioned in interviews:
1. quicksort: implement it, explain it
2. mergesort: implement it, talk about space complexity as well as time complexity
3. insertion sort: explain when it can be better than the above two
4. heapsort: explain how it works, and how heaps work in general
5. bubble sort: why it's awful
6. radix/counting/bucket sort: when it's useful
7. selection sort: usually thrown in as an example when asked to list sorting algorithms you know.

Understand and implement quick and merge sort
Understand the use cases of insertion, bucket, counting, radix sort
Learn how heap sort works with the tree data structure
Know why you shouldnâ€™t use bubble sort or selection sort